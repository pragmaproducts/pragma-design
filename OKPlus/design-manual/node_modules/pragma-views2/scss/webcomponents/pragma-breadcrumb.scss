@import "../lib/variables";
@import "../lib/mixins";

pragma-breadcrumb {
  --arrow-size: 0.5rem;

  ol {
    list-style: none;
    display: flex;
    padding: 0;
  }
  li {
    position: relative;
    display: inline-block;
    text-transform: capitalize;
  }

  li + li {
    padding-left: 2rem;
  }
  
  li + li:after {
    content: "";
    position: absolute;
    top: calc(50% - var(--arrow-size) / 2);
    left: 0;
    bottom: 0;
    height: var(--arrow-size);
    width: var(--arrow-size);
    border: $default-border-width-thin solid var(--c-border);
    transform: rotate(45deg) translate(0, 0);
    border-bottom: none;
    border-left: none;
    margin-left: var(--arrow-size);
  }
  
  li:hover{
    >:first-child{
      opacity: 1;
      transform: translateY(-0.125rem);
    }
    >:first-child:before {
      transform: scaleX(1);
    }
    &:after{
      transform: rotate(45deg) translate(0.25rem, -0.25rem);
      transition: transform ease-in-out .3s;
    }
  }
  
  li > :first-child{
    display: block;
    transition: opacity ease-in-out .3s, transform ease-in-out .5s;
    opacity: 0.8;
    will-change: transform, opacity ;
    padding: $half-padding /2;
    
  }

  li >:first-child:before {
    content: "";
    position: absolute;
    bottom:0;
    left: 0;
    right: 0;
    height: $default-border-width-thin;
    border-bottom: $default-border-width-thin solid var(--c-border);
    transform: scaleX(0);
    transition: transform ease-in-out .2s;
    will-change: transform;
  }

  a, a:visited {
    color: var(--c-text);
    text-decoration: none;
    font-size: var(--font-size-small);
  }
  
  li:last-child{
    pointer-events: none;
  }
}