pragma-label-composite {
  display: block;
  margin-bottom: 1rem;

  label {
    display: block;
    color: var(--c-font-label);
  }
  
  label[for]{
    cursor: pointer;
  }

  &:focus-within{
    label{
      color: var(--c-focus);
    }
  }

  &[data-status="invalid"] label[for] {
    color: var(--c-error);
  }

  input {
    width: 100%;
  }

  .descriptor{
    color: var(--c-font-label);
    font-size: var(--font-size-x-small);
  }

  .input-group {
    width: 100%;
    display: flex;
    flex-direction: row;

    input {
      flex: 1;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    /* Peek button */
    #btnPeek{
      border-left: none;

      svg{
        fill: var(--c-text)
      }
    }

    #btnPeek:hover{
      background:transparent;
      svg{
        fill:var(--c-text);
      }
    }

    input[readonly] ~ #btnLookup {
      display: none;
    }

    input[readonly] ~ pragma-icon-button {
      border-color: var(--c-disabled);
    }

    input:disabled ~ pragma-icon-button {
      pointer-events: none;
      svg {
        fill: var(--c-disabled);  
      }
    }

    #loading-icon{
      display: none;
    }
    
    pragma-icon-button.spinner {
      display:none;
    }
    
    
    #btnLookup.spinner ~  #loading-icon{
      display: block;
      border-bottom: $input-border-width solid var(--c-border);
      svg {
        @include cubicBezierSpinner();
        padding: 0.5rem;
        fill: var(--c-disabled);
      }
    }

    /* Button styles*/

    pragma-icon-button {
      border-bottom: $input-border-width solid var(--c-border);
      box-sizing: border-box;
      height: 1.5rem;
      width: $large-icon-size;
    }
  }
}


