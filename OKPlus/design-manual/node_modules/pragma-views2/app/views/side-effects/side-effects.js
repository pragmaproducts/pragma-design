import {ViewBase} from "../../../baremetal/lib/view-base.js";
import {template} from "./schema.js";
import {cloneObject} from "./../../../baremetal/lib/class-helper.js";
import {DatasetFactory} from "./../../../lib/dataset-factory.js";
import {performTriggersFor} from "../../../baremetal/lib/binding/observers.js";
//import {SchemaSideEffectManager} from "./../../../lib/schema-side-effects/schema-sideeffect-manager.js";

export default class SideEffects extends ViewBase {
    connectedCallback() {
        this.context = this;
        this.remoteName = "Side Effects";
        this.mainSchema = cloneObject(template);
        //this.effectsManager = new SchemaSideEffectManager(this.mainSchema, this._element);
    }

    schemaLoaded(event) {
        const options = {
            schema: this.mainSchema
        };

        this.dsFactory = new DatasetFactory(options);
        this.model = this.dsFactory.createDataSet(0, {}, this.model);
        performTriggersFor(this.model);
    }

    setColumns() {
        // OVERRIDE - used by query builder
        // this.effectsManager.perform({
        //     target: "pragma-advanced-grid",
        //     id: "advanced-grid",
        //     intentions: [
        //         {
        //             action: "overrideColumns",
        //             parameters: [["code", "isActive", "description"], ["Code", "Is Active", "Description"]]
        //         }
        //     ]
        // });

        // this.effectsManager.perform({
        //     target: "pragma-advanced-grid",
        //     id: "advanced-grid",
        //     intentions: [
        //         {
        //             action: "appendColumn",
        //             parameters: ["isActive", "Is Active"]
        //         }
        //     ]
        // });

        // this.effectsManager.perform({
        //     target: "pragma-advanced-grid",
        //     id: "advanced-grid",
        //     intentions: [
        //         {
        //             action: "removeColumn",
        //             parameters: ["code"]
        //         }
        //     ]
        // });

        this.mainSchema.sideEffects.perform({
            target: "pragma-advanced-grid",
            id: "advanced-grid",
            intentions: [
                {
                    action: "moveColumn",
                    parameters: [1, 0]
                }
            ]
        });
    }

    setUpdateDataSource() {
        this.mainSchema.sideEffects.perform({
            target: "datasource",
            id: 0,
            intentions: [
                {
                    property: "queryString",
                    value: "isActive eq true"
                },
                {
                    property: "fields",
                    value: ["code", "description", "isActive"]
                }
            ]
        })
    }
}
