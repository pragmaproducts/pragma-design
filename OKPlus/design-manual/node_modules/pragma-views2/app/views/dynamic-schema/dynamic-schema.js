import {ViewBase} from "../../../baremetal/lib/view-base.js";
import {template} from "./schema.js";
import {DatasetFactory} from "./../../../lib/dataset-factory.js";
import {cloneObject} from "../../../baremetal/lib/class-helper.js";
import {performTriggersFor} from "../../../baremetal/lib/binding/observers.js";

export default class DynamicSchema extends ViewBase {
    connectedCallback() {
        this.context = this;
    }
         
    increaseAge() {
        this.model.age++;
    }
    
    cleanSchema(){
        this.schema = null
    }
    
    resetSchema(){
        this.schema = cloneObject(template);
    }

    schemaLoaded(event) {
        console.log("Schema loaded");
        this.loadModel();
    }

    loadModel() {
        const options = {
            schema: this.schema
        };

        this.dsFactory = new DatasetFactory(options);
        this.model = this.dsFactory.createDataSet(0, this.model, this.model);
        performTriggersFor(this.model);
    }

    addHeight() {
        this.schema = null;
        const newSchema = cloneObject(template);
        
        const heightDataset = {
            name: "height"
        };
        
        this.model.height = 1.80;
        
        newSchema.datasets[0].fields.push(heightDataset);

        const heightElement = {
            element: "input",
            title: "Height",
            field: "model.height"
        };
        newSchema.body.elements.push(heightElement);
        
        this.schema = newSchema;
    }
}