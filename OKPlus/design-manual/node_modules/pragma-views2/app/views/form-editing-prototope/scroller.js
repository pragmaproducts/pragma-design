import {disableAnimationLayer, enableAnimationLayer} from "./../../../lib/animation-layer.js";
import {addEventsFeatures, removeEventsFeatures} from "./../../../baremetal/lib/mixin-events.js";
import {inRegion} from "./utils.js";

export class Scroller {
    constructor(element, delay = 10, direction = "height") {
        addEventsFeatures(this);
        this.element = element;
        this.delay = delay;
        this.direction = direction;
    }
    
    dispose() {
        removeEventsFeatures(this);
        this.element = null;
    }
    
    start() {
        this.layer = enableAnimationLayer();
        this.updateRegions();
        this.registerEvent(this.layer, "mouseup", this.stop.bind(this));
        this.registerEvent(this.layer, "mousemove", this.processMouse.bind(this));
    }
    
    stop() {
        this.unregisterEvent(this.layer, "mouseup");
        this.unregisterEvent(this.layer, "mousemove");
        
        disableAnimationLayer();
        this.layer = null;
    }

    updateRegions() {
        const size = 100;
        const bb = this.element.getBoundingClientRect();
        
        this.topRegion = {
            left: bb.left,
            top: bb.top,
            right: bb.right,
            bottom: bb.top + size
        }
        
        this.bottomRegion = {
            left: bb.left,
            top: bb.bottom - size,
            right: bb.right,
            bottom: bb.bottom
        }
        
        console.log(this.topRegion);
        console.log(this.bottomRegion);
    }

    processMouse(event) {
        this.point = {x: event.clientX, y: event.clientY};
        if (this.isScrolling == true) return;
        
        if (inRegion(this.topRegion, this.point) == true) {
            this.scrollUp();
        }
        else if (inRegion(this.bottomRegion, this.point) == true) {
            this.scrollDown();
        }
    }
    
    scrollUp() {
        this.isScrolling = true;
        
        if (inRegion(this.topRegion, this.point) == true) {
            setTimeout(() => this.scrollUp(), this.delay);
        }
        else {
            this.isScrolling = false;
        }
        
        console.log("scroll up");
    }
    
    scrollDown() {
        this.isScrolling = true;
        
        if (inRegion(this.bottomRegion, this.point) == true) {
            setTimeout(() => this.scrollDown(), this.delay);
        }
        else {
            this.isScrolling = false;
        }
        
        console.log("scroll down");
    }
}