import {ViewBase} from "../../../baremetal/lib/view-base.js";
import {template} from "./schema.js";
import {cloneObject} from "../../../baremetal/lib/class-helper.js";
import {DatasetFactory} from "../../../lib/dataset-factory.js";
import {performTriggersFor} from "../../../baremetal/lib/binding/observers.js";
import {Scroller} from "./scroller.js";

export default class FormEditingPrototope extends ViewBase {
    connectedCallback() {
        this.context = this;
        this.schema = cloneObject(template);
        this.remoteDsCallbackHandler = this.remoteDsCallback.bind(this);
    }

    disconnectedCallback() {
        this.scroller.dispose();
        this.scroller = null;
    }
    
    schemaLoaded() {
        const options = {
            schema: this.schema,
            remoteDsCallback: this.remoteDsCallbackHandler
        };

        this.dsFactory = new DatasetFactory(options);
        this.model = this.dsFactory.createDataSet(0, {}, this.model, "form-editing-prototype");
        
        performTriggersFor(this.model);
        const scrollElement = document.querySelector("view-container");
        this.scroller = new Scroller(scrollElement);
    }

    remoteDsCallback() {
        const result = [];
        for (let i = 0; i < 200; i++) {
            result.push({
                id: i,
                code: `Code ${i}`
            })
        }
        
        return result;
    }
    
    startMonitoring() {
        this.scroller.start();
    }
}