import {ViewBase} from "../../../baremetal/lib/view-base.js";
import {template} from "./schema.js";
import {cloneObject} from "../../../baremetal/lib/class-helper.js";
import {DatasetFactory} from "../../../lib/dataset-factory.js";
import {performTriggersFor} from "../../../baremetal/lib/binding/observers.js";

export default class RepeatUI extends ViewBase {
    connectedCallback() {
        this.schema = cloneObject(template);
        this.context = this;
    }

    schemaLoaded() {
        const options = {
            schema: this.schema,
            remoteDsCallback: this.remoteDsCallback.bind(this)
        }
        
        this.dsFactory = new DatasetFactory(options);
        this.model = this.dsFactory.createDataSet(0, {}, this.model, "remote-test");
        performTriggersFor(this.model);
    }

    remoteDsCallback(def) {
        return this[def.remote]();
    }
    
    getColumns() {
        return [
            {
                "id": 0,
                "title": "Column 0",
            },
            {
                "id": 1,
                "title": "Column 1",
            },
            {
                "id": 2,
                "title": "Column 2",
            },
            {
                "id": 3,
                "title": "Column 3",
            }
        ];
    }
    
    getOptions() {
        return [
            {
                "id": 1,
                "title": "Option 1",
                "code": "Code 1",
                "description": "Description 1"
            },
            {
                "id": 2,
                "title": "Option 2",
                "code": "Code 2",
                "description": "Description 2"
            },
            {
                "id": 3,
                "title": "Option 3",
                "code": "Code 3",
                "description": "Description 3"
            }
        ]
    }
    
    log() {
        console.table(this.model.columns._data);
    }
}