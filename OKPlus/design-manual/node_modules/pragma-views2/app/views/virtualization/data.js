import {HierarchicalItem, itemsToHierarchyItems} from "./../../../lib/hierarchical-item.js";

const SIZE = 100000;

export async function createLargeData() {
    return new Promise(resolve => {
        const result = [SIZE]
        for (let i = 0; i < SIZE; i++) {
            result[i] = {
                id: i,
                code: `Code ${i}`,
                description: `Description ${i}`,
                longdescription: `Long description ${i}`,
                isActive: true,
                date: new Date()
            }
        }
        resolve(result);
    })
}

let itemIndex = -1;

export async function createLargeHierarchicalData() {
    return new Promise(resolve => {
        itemIndex = -1;
        
        const item = {
            title: "none",
            items: []
        };
        
        addGroupItems(item.items, 0, 100, 10);
        
        resolve(item.items);
    });
}

export async function createLargeFlatListData() {
    let items = [];

    for (let i = 0; i < 100000; i++) {
        itemIndex++;
        const item = {
            id: itemIndex,
            code: `Code ${itemIndex}`,
            description: `Description ${itemIndex}`,
            longdescription: `Long description ${itemIndex}`,
            isActive: true,
            date: new Date()
        };

        items.push(item);
    }
    
    return items;
}

function addGroupItems(items, level, count, childCount) {
    for (let i = 0; i < count; i++) {
        const item = {
            title: `Group ${i} Level ${level}`,
            level: level,
            isGroup: true,
            aggregate: {
                aggregate: "count",
                value: childCount
            },
            items: []
        }
        
        items.push(item);
        
        if (level == 0) {
            addGroupItems(item.items, 1, 10, 10);
        }
        else {
            addLeafItems(item.items, 10);
        }
    }
}

function addLeafItems(items, count) {
    let success = true;

    for (let i = 0; i < count; i++) {
        success = !success;
        itemIndex++;
        const item = {
            id: itemIndex,
            code: `Code ${itemIndex}`,
            description: `Description ${itemIndex}`,
            longdescription: `Long description ${itemIndex}`,
            isActive: true,
            date: new Date(),
            success: success
        }
        
        items.push(item);
    }
}