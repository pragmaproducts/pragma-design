import {ViewBase} from "./../../../baremetal/lib/view-base.js";
import {createDatasource} from "./datasource-factory.js";
import {findParentOfType} from "./../../../lib/dom-helper.js";
import {createDataSetFromDatasource} from "./../../../lib/data-utils.js";

export default class Virtualization extends ViewBase {
    get count() {
        return this._count;
    }
    
    set count(newValue) {
        this._count = newValue;
    }
    
    connectedCallback() {
        this.datasource = createDatasource();
        this.datasource.schema.remoteUpdate = this.remoteUpdate.bind(this);
        this.datasource.load();
        this.count = 0;
        this.grid = this._element.querySelector("#advanced-grid");
    }
    
    disconnectedCallback() {
        this.datasource.schema.remoteUpdate = null;
        this.datasource = null;
    }

    addColumn() {
        this.grid.appendColumn("longdescription", "Long Description");
    }

    removeColumn() {
        this.grid.removeColumn("longdescription");
    }

    moveColumn() {
        this.grid.moveColumn(1,0);
    }

    overrideColumns() {
        this.grid.overrideColumns(["isActive", "code"], ["Is Active", "Code"]);
    }

    async selectionChanged(args) {
        const grid = findParentOfType(args.target, "pragma-advanced-grid");
        this.editDataset = await createDataSetFromDatasource(grid.datasource, this.editDataset);
        this.editDataset.code = "JHR";
        this.editDataset.update();
    }
    
    async remoteUpdate(args) {
        console.log(args);
    }
}