import {sameDay} from "../../lib/date-helpers.js";

export class ListRenderer {
    constructor(calendarInstance) {
        this._calendarInstance = calendarInstance;
    }

    _renderDays(details, dataStore) {
        for (const day of dataStore.dataModel.days) {
            const containerDiv = document.createElement("div");
            containerDiv.setAttribute("data-value",
                `${day.date.getFullYear()}-${day.date.getMonth() + 1}-${day.date.getDate()}`);
            const today = new Date();
            containerDiv.classList.add("day");

            if (sameDay(day.date, today)) {
                containerDiv.classList.remove("suppressed");
                containerDiv.classList.add("today");
            }

            if (day.isBufferDay === true) {
                containerDiv.classList.add("no-date");
            }

            if (day.customClasses.length > 0) {
                for (const customClass of day.customClasses) {
                    containerDiv.classList.add(customClass);
                }
            }

            for (const element of this._calendarInstance.dayTemplate) {
                const clonedElement = element.cloneNode(true);
                containerDiv.appendChild(clonedElement);
            }

            this._calendarInstance.dayInflator.inflateFn(containerDiv, {day: day.date.getDate()});
            details.appendChild(containerDiv);
        }
    }

    render(renderDate, oldRenderDate, fragment, calendarContainer, dataStore) {
        const oldDetails = calendarContainer.querySelector(".details");
        const details = document.createElement("div");
        details.classList.add("details");
        this._renderDays(details, dataStore);
        fragment.appendChild(details);
        calendarContainer.replaceChild(fragment, oldDetails);
    }
}