export class Current {

    get currentDate() {
        return this._currentDate;
    }

    set currentDate(newValue) {
        const previous = this.currentDate;

        if (previous !== newValue) {
            this._currentDate = newValue;
            this.render();
        }
    }

    constructor(calendar) {
        this._calendar = calendar;
        this._initTemplate();
    }

    render() {
        this._cleanUp();

        let elementObjects = this._calendar.getDayContainersForDates([this.currentDate]);

        for (let elementObject of elementObjects) {
            let model = elementObject.model;

            if (model != null) {

                let element = elementObject.element;

                for (let templateChild of this._currentTemplate) {
                    let newElement = templateChild.cloneNode(true);
                    newElement.classList.add("current-date");

                    element.appendChild(newElement);
                    if (newElement.classList.contains('current-date')) element.classList.add("current-container");
                }
            }
        }
    }

    _cleanUp() {
        const elements = Array.from(
            this._calendar.detailsContainer.querySelectorAll(".current-date"));

        while (elements.length > 0) {
            const element = elements.pop();
            const parent = element.parentElement;
            parent.classList.remove("current-container");
            parent.removeChild(element);
        }
    }

    _initTemplate() {
        this._currentTemplate = document.importNode(window.templates.get("current"), true).children;
    }
}