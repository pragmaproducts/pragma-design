import {BaseElement} from "../../baremetal/lib/base-element.js";

export class PragmaIconButton extends BaseElement {
    get iconName() {
        return this.getAttribute("icon-name") || this._iconName;
    }

    set iconName(newValue) {
        this._iconName = newValue;
    }

    get ariaLabel() {
        return this.getAttribute("aria-label") || this._ariaLabel;
    }

    set ariaLabel(newValue) {
        this._ariaLabel = newValue;
        this.setAttribute("aria-label", newValue);
        if (this.getAttribute("tooltip") == null) {
            this.setAttribute("tooltip", newValue);
        }
    }

    get disabled() {
        if (this._disabled == null) {
            this._disabled = this.getAttribute("disbaled");
        }
        return this._disabled;
    }

    set disabled(value) {
        value = value === true;
        this._disabled = value;
        this.setAttribute("aria-disabled", value);

        if (value) {
            this.setAttribute("role", "img");
            this.removeAttribute("tabIndex");
        } else {
            this.setAttribute("role", "button");
            this.setAttribute("tabIndex", "0");
        }
    }

    static get observedAttributes() {
        return ["disabled"];
    }

    constructor() {
        super();
    }

    connectedCallback() {
        super.connectedCallback();

        this.initTemplate();
        this.setImage();
        this.setAriaAttributes();
        this.registerEvent(this, "keydown", this.keyup.bind(this));
    }

    attributeChangedCallback(name, oldValue, newValue) {
        if (name === "disabled") {
            this.setAttribute("aria-disabled", newValue);
        }
    }

    initTemplate() {
        const instance = document.importNode(window.templates.get("pragma-icon-button-template"), true);
        this.appendChild(instance);
    }

    setImage() {
        const useElement = this.querySelector("use");
        useElement.setAttribute("xlink:href", `#${this.iconName}`);
    }

    setAriaAttributes() {
        if (this.ariaLabel == null) {
            console.error("image-button must have a aria-label attribute set");
        }

        this.setAttribute("role", "button");
        this.setAttribute("tabindex", "0");
    }

    /**
     * Keyup event handler
     * @param event
     */
    keyup(event) {
        let keyUpHandler;
        switch (event.key) {
            case " ":
            case "Enter":
                keyUpHandler = event.target.click;
                break;
            default:
                break;
        }

        if (keyUpHandler != null) {
            keyUpHandler.call(this);
        }
    }
}

customElements.define("pragma-icon-button", PragmaIconButton);