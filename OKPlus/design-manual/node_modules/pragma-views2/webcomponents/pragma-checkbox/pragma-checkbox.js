import {BaseElement} from "./../../baremetal/lib/base-element.js";
import {ComponentUiStates} from "../../lib/component-ui-states.js";

export class PragmaCheckbox extends BaseElement {

    connectedCallback() {
        super.connectedCallback();
        this._initTemplate();
        this.setAttribute("role", "checkbox");
        this.setAttribute("tabindex", "0"); // Including the component in the tabindex
        this.readonly = this.hasAttribute("readonly");
        this.checked = this.getAttribute("checked") ? this.getAttribute("checked") === "true" : this.hasAttribute("checked");

        // Adding component event listeners
        this.registerEvent(this, "keydown", this._keydown.bind(this));
        this.registerEvent(this, "click", this._click.bind(this));
    }

    disconnectedCallback() {
        super.disconnectedCallback();
    }

    get checked() {
        return this._checked == null ? this.hasAttribute("checked") : this._checked;
    }

    set checked(value) {
        this._checked = value;
        this.value = this._checked; // Public value property to be similar to a HTML checkbox

        if (this._checked === true) {
            this._setCheckedState();
        }
        else {
            this._setUncheckedState();
        }
    }

    get label() {
        return this._label;
    }

    get readonly() {
        return this._readonly || this.hasAttribute("readonly");
    }

    set readonly(value) {
        this._readonly = value;
    }

    set state(newValue) {
        console.log(newValue);
        if(newValue === ComponentUiStates.active) {
            this.checked = true;
        }
        else {
            this.checked = false;
        }
    }

    get state() {
        return this._state;
    }

    /**
     * Component click event handler
     * @param event
     * @private
     */
    _click(event) {
        this._toggleCheckedStatus();
    }

    /**
     * Initialises the template for the component
     * @private
     */
    _initTemplate() {
        const instance = document.importNode(window.templates.get("pragma-checkbox-template"), true);
        this.appendChild(instance);
    }

    /**
     * Keydown event handler
     * @private
     */
    _keydown(event) {
        if(event.key === " ") { 
            // Handling the space key
            this._toggleCheckedStatus();
        }
    }

    /**
     * Sets the checked state of the checkbox input
     * @private
     */
    _setCheckedState() {
        this.innerHTML = this._getSvg();
        this.setAttribute("aria-checked", "true");
    }

    /**
     * Sets the checked state of the checkbox input to unchecked
     * @private
     */
    _setUncheckedState() {
        this.innerHTML = this._getSvg();
        this.setAttribute("aria-checked", "false");
    }

    _toggleCheckedStatus() {
        if(this._readonly === false) {
            this.checked = !this.checked;   
        }
    }

    /**
     * Returns the svg markup based on the checked state of the component
     * @returns {string}
     * @private
     */
    _getSvg() {
        // Note (AA): Setting the svg in the code to avoid importing node for performance benefits
        const top = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'>";
        const bottom = "</svg>";
        
        if(this._checked === true) {
            return `${top} <path d='M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z'/> ${bottom}`;
        }

        return `${top} <path d='M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z'/> ${bottom}`;
    }
}

customElements.define('pragma-checkbox', PragmaCheckbox);