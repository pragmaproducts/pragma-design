import {createElement} from "./../../lib/dom-helper.js";

/**
 * Add column groups if they are defined in the visualization
 * @param element: Visualization to draw on: gird, treelistview...
 */
export function addGroups(element) {
    const groups = Array.from(element.querySelectorAll("header-groups > group"));
    element.hasGroups = groups.length > 0;
    element.style.setProperty("--headerHeight", element.hasGroups == true ? "4rem" : "2rem");

    if (element.hasGroups == false) return;

    const parent = document.createElement("div");

    if (element.allowMultipleSelect == true) {
        const element = createGroupElement("", 1);
        element.style.width = "2rem";
        parent.appendChild(element);
    }

    for (let group of groups) {
        parent.appendChild(createGroupElement(group.getAttribute("title"), group.getAttribute("count")));
    }

    element.header.appendChild(parent);
}

export function resizeGroups(element) {
    if (element.hasGroups != true) return;

    const groups = Array.from(element.querySelectorAll(".header-group"));
    
    let iStart = 0;
    if (element.allowMultipleSelect == true) {
        groups[0].style.width = "3rem";
        iStart = 1;
    }

    let startIndex = 0;
    let endIndex = 0;

    for (let i = iStart; i < groups.length; i++) {
        const group = groups[i];
        endIndex = startIndex + group.count;
        const width = getColumnCombinedWidth(element, startIndex, endIndex);
        group.style.width = `${width}px`;
        startIndex = endIndex;
    }
}

function getColumnCombinedWidth(element, startIndex, endIndex) {
    const columns = element.columns;
    const length = element.columns.length - 1;
    let width = 0;
    for (let i = startIndex; i < endIndex; i++) {
        if (i > length) break;
        width += Number(columns[i].dataset.width);
    }
    return width;
}

function createGroupElement(title, count) {
    const result = createElement("div", ["header-group"], [{name: "count", value: count}], title || "", "columnheader");
    result.count = Number(count);
    return result;
}