import {createSvg} from "../../lib/dom-helper.js";

export function scrollItem(element, deltaY, deltaX) {
    element.__top = element.__top - deltaY;
    element.__left = (element.__left || 0) - deltaX;
    element.style.transform = `translate(${element.__left}px, ${element.__top}px)`;
}

export function moveItemY(element, y, X) {
    element.__top = y;
    element.__left = X;
    element.style.transform = `translate(${element.__left}px, ${element.__top}px)`;
}

export function createCheckbox(checked, ariaLabel) {
    const checkbox = createSvg(checked === true?"checked":"unchecked");
    checkbox.setAttribute("data-checkbox", "true");
    checkbox.setAttribute("aria-label", ariaLabel);
    checkbox.setAttribute("role", "checkbox");
    const visibleExpression = checked === true? "#__isSelected != true" :"#__isSelected || false";
    checkbox.setAttribute("aria-hidden",visibleExpression);
    return checkbox;
}

export function createExpandedArrow(expandRef) {
    const svg = createSvg("rightchevron");
    // TODO GM: Translations for expanding and collapsing labels
    svg.setAttribute("aria-label", "Expand");
    svg.setAttribute("aria-expanded", "#__isExpanded || false");

    if(expandRef != null) {
        svg.setAttribute("aria-hidden", `#__isBusy == true || (item.constructor.name !== "HierarchicalItem" || item.hasChildren != true) && (item.model == null || item.model.${expandRef} != true)`);
    }
    else {
        svg.setAttribute("aria-hidden", `#__isBusy == true || (item.constructor.name !== "HierarchicalItem" || item.hasChildren != true)`);
    }
    return svg;
}