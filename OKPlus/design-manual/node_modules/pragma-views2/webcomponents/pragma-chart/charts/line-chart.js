import {loadScript} from "./../../component-loader.js";

class LineChart extends HTMLElement {
    get smooth() {
        const value = this.getAttribute("smooth") || this._smooth;
        return value == true || value == "true";
    }

    set smooth(newValue) {
        this._smooth = newValue;
    }

    get axisUI() {
        if(this._axisUI == undefined) {
            this._axisUI = this.parentElement.svg.append("g").attr("id", "chart-body")
        }

        return this._axisUI;
    }

    async connectedCallback() {
        const scriptPath = './third-party/d3.min.js';
        this._script = await loadScript(scriptPath, true, () => {
            this.parentElement.addChart(this);
            if (this._script != null) this._script.onload = null;
        });
    }

    disconnectedCallback() {
        this.parentElement.removeChart(this);
        delete this.axisUI;
        this._script = null;
    }

    update(data) {
        const padding = this.parentElement.paddingValues;
        const x = this.parentElement.xAxis.d3Scale;
        const y = this.parentElement.yAxis.d3Scale;

        const width = this.parentElement.xAxis.itemWidth / 2;

        const xField = this.parentElement.xAxis.field;
        const yField = this.parentElement.yAxis.field;
        const isTimeline = this.parentElement.xAxis.constructor.name == "TimeAxis";

        const line = d3.line()
            .x(d => (isTimeline == true ? x(new Date(d[xField])) : x(d[xField])) + padding.left)
            .y(d => y(d[yField]) + padding.top);

        if (this.smooth == true) {
            line.curve(d3.curveCardinal);
        }

        const dataJoin = this.axisUI.selectAll(".line")
            .data([data]);

        dataJoin.exit().remove();

        dataJoin
            .enter()
                .append('path')
                .attr("class", "line")
            .merge(dataJoin)
                .transition()
                .duration(500)
                .ease(d3.easeElastic)
                .attr("d", line)
    }
}

customElements.define("line-chart", LineChart)
