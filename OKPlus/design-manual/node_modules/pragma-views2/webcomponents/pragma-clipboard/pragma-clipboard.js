import {BaseElement} from "./../../baremetal/lib/base-element.js";
import {loadScript, removeScript} from "./../component-loader.js";

class PragmaClipboard extends BaseElement {

    async connectedCallback() {
        super.connectedCallback();

        this.scriptPath = './third-party/clipboard-polyfill.js';
        this.script = await loadScript(this.scriptPath, true, () => {
            this.copyToClipboardHandler = this.copyToClipboard.bind(this);
            window.eventEmitter.on("copy-to-clipboard", this.copyToClipboardHandler);
            if (this.script != null) this.script.onload = null;
        });
    }

    /**
     * Copy item to clipboard
     * @param params
     * @returns {Promise<void>}
     */
    async copyToClipboard(params) {
        let toBeCopied;
        if (params.value.constructor.name.toLowerCase() == "object") {
            toBeCopied = JSON.stringify(params.value)
                .replace(/[${}()|[\]\\]/gi, '')
                .replace(/[:]/gi, ': ')
                .replace(/[,]/gi, ', ');
        }
        else {
            toBeCopied = params.value.toString();
        }
        await clipboard.writeText(toBeCopied);
    }

    async disconnectedCallback() {
        window.eventEmitter.remove("copy-to-clipboard", this.copyToClipboardHandler);
        this.copyToClipboardHandler = null;

        await removeScript(this.scriptPath);
        this.scriptPath = null;
        this.script = null;
    }

    onMessage(params) {
        if (this[params.message] != undefined) {
            this[params.message]();
        }
    }
}

customElements.define('pragma-clipboard', PragmaClipboard);