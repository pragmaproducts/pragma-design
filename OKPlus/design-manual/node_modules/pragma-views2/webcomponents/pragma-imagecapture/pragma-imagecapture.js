class PragmaImageCapture extends HTMLElement {
    connectedCallback() {
        this.initTemplate();
        this.initializeDevice();
    }

    disconnectedCallback() {
        this.stopRecording();
    }
    
    initTemplate() {
        const instance = document.importNode(window.templates.get("pragma-imagecapture"), true);
        this.video = instance.querySelector("video");
        this.appendChild(instance);
        
        this.canvas = document.createElement("canvas");
    }

    initializeDevice() {
        navigator.mediaDevices.getUserMedia({video: true, frameRate: 60})
            .then((stream) => {
                this.video.srcObject = stream;
            })
            .catch((error) => {
                window.eventEmitter.emit("show-message", {
                    message: error,
                });
            });
    }
    
    stopRecording() {
        this.video.srcObject.getTracks()[0].stop();
    }

    startCapturing() {
        this._capturing = true;
        this.captureFrames();
    }
    
    stopCapturing() {
        this._capturing = false;
    }
    
    captureFrames() {
        requestAnimationFrame(() => {
            this.canvas.width = this.video.videoWidth;
            this.canvas.height = this.video.videoHeight;
            this.canvas.getContext('2d').drawImage(this.video, 0, 0, this.canvas.width, this.canvas.height);

            const image = this.canvas.toDataURL('image/jpeg', 1.0);

            const event = new CustomEvent("capture", {
                detail: image
            });
            
            this.dispatchEvent(event);

            if (this._capturing == true) {
                this.captureFrames();
            }
        })
    }
}

customElements.define("pragma-imagecapture", PragmaImageCapture);