export async function loadComponent(path, templated) {
    if (templated == true) {
        await loadTemplates(`${path}.html`);
    }

    loadScript(`${path}.js`);
}

function getExistingScript(path) {
    const documentHeadChildNodes = Array.from(document.head.childNodes);
    return documentHeadChildNodes.find(x => x.tagName === "SCRIPT" && x.src.includes(path.replace('./','')));
}

export async function loadScript(path, defer, onloadCallback) {
    const existingScript = getExistingScript(path);
    if (existingScript != null) {
        if (onloadCallback != null) onloadCallback();
        return existingScript;
    }

    const script = document.createElement("script");
    script.async = true;
    script.src = path;
    
    if (onloadCallback != null) {
        script.onload = onloadCallback;
    }
    
    if (defer != null) {
        script.defer = defer;
    }
    else {
        script.type = "module";
    }

    document.head.appendChild(script);

    return script;
}

export async function removeScript(path) {
    const existingScript = getExistingScript(path);
    if (existingScript != null) {
        document.head.removeChild(existingScript);
    }
}

async function loadTemplates(path) {
    const result = await fetch(path).then(result => result.text());

    const tdoc = document.createElement("template");
    tdoc.innerHTML = result;

    const templates = tdoc.content.querySelectorAll("template");
    for (let template of templates) {
        window.templates.set(template.id, template.content);
    }
}