import {ScreenObserver} from "../../../lib/screen-observer.js";
import {TemplateParser} from "../../../lib/template-parser.js";

describe("template-parser-tests", () => {
    const sandbox = sinon.createSandbox();
    let instance;


    beforeEach(() => {
        instance = new TemplateParser();
    });

    afterEach(()=> {
        instance.dispose();
        sandbox.restore();
    });

    it('constructor', () => {
        // Arrange
        // Act
        instance = new TemplateParser();

        // Assert
        chai.assert.isNotNull(instance.parseMap);

        chai.assert.isNotNull(instance.parseTabSheetHandler);
        chai.assert.isNotNull(instance.parseGroupsHandler);
        chai.assert.isNotNull(instance.parseGroupHandler);
        chai.assert.isNotNull(instance.parsePanelBarHandler);
        chai.assert.isNotNull(instance.parseSplitViewHandler);
        chai.assert.isNotNull(instance.parseInputHandler);
        chai.assert.isNotNull(instance.parseDateHandler);
        chai.assert.isNotNull(instance.parseDateTimeHandler);
        chai.assert.isNotNull(instance.parseTextAreaHandler);
        chai.assert.isNotNull(instance.parseButtonHandler);
        chai.assert.isNotNull(instance.parseIconButtonHandler);
        chai.assert.isNotNull(instance.parseElementsHandler);
        chai.assert.isNotNull(instance.parseCheckboxHandler);
        chai.assert.isNotNull(instance.parseSelectHandler);
        chai.assert.isNotNull(instance.parseCardHandler );
        chai.assert.isNotNull(instance.parseRadioHandler);
        chai.assert.isNotNull(instance.parseTemplateHandler);
        chai.assert.isNotNull(instance.parseMasterDetailHandler);
        chai.assert.isNotNull(instance.parseListHandler);
        chai.assert.isNotNull(instance.parseTreeHandler);
        chai.assert.isNotNull(instance.parseReadonlyHandler);
        chai.assert.isNotNull(instance.parseVisualizationHandler);
        chai.assert.isNotNull(instance.parseHtmlTemplateHandler );
        chai.assert.isNotNull(instance.parseActionButtonHandler);
        chai.assert.isNotNull(instance.parseGridHandler);
        chai.assert.isNotNull(instance.parseOverflowToolbarHandler);
        chai.assert.isNotNull(instance.parseSvgSymbolHandler);
        chai.assert.isNotNull(instance.parseTreeListHandler);
    });




    it('validateAndSaveId - returns true if valid', () => {
        // Arrange
        let store = {};
        let element = {
            id: "grid"
        };

        // Act
        const result = instance.validateAndSaveId(element, store);

        // Assert
        chai.assert.isTrue(result);
        chai.assert.equal(element, store[element.id]);
        chai.assert.equal(element.id, Object.keys(store)[0]);
    });

    it('validateAndSaveId - returns false if invalid', () => {
        // Arrange
        let store = {};
        let element = {};

        // Act
        const result = instance.validateAndSaveId(element, store);

        // Assert
        chai.assert.isFalse(result);
    });
});
