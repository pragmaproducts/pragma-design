import {ActionDialogManager} from "../../../lib/action-dialog-manager.js";

describe("action-dialog-manager-tests", () => {
    let dialogInstances;
    let content;
    let dialogId = 1;

    beforeEach(() => {
        content = document.createElement("div");
        content.id = "testId";
        dialogInstances = [];
        window.dialogManager = {
            add: (actionDialog)=> {
                actionDialog.id = dialogId;
                dialogInstances.push(actionDialog);
            },
            remove: (actionDialog) => {
                dialogInstances.splice(dialogInstances.indexOf(actionDialog),1)
            }
        };

        window.eventEmitter = {
            on: () => {
                return;
            }
        };

    });

    it('Constructor - Constructor properties set', () => {
        // Arrange
        
        const buttons = [
            {
                id: "testActionButton",
                title: "TestActionButton",
                remote: true,
                callback: async (dialog, button) => {
                    
                }
            },
            {
                id: "testButton",
                title: "TestActionButton",
                remote: false,
                callback: async (dialog, button) => {
                   
                }
            }
        ];

        const options = {
            contentElement: content,
            buttons: buttons,
            title: "myTitle"
        };
        
        // Act
        const dialogInstance = new ActionDialogManager(options);

        // Assert
        chai.assert.equal(dialogInstance.title, options.title);
        chai.assert.equal(dialogInstance.contentElement.id, content.id);
        chai.assert.equal(dialogInstance.buttons, options.buttons);
        
    });

    it('Create - All properties set', () => {
        // Arrange

        const buttons = [
            {
                id: "testActionButton",
                title: "TestActionButton",
                remote: true,
                callback: async (dialog, button) => {

                }
            },
            {
                id: "testButton",
                title: "TestActionButton",
                remote: false,
                callback: async (dialog, button) => {

                }
            }
        ];

        const options = {
            contentElement: content,
            buttons: buttons,
            title: "myTitle"
        };

        // Act
        const dialogInstance = new ActionDialogManager(options);
        dialogInstance.create();

        // Assert
        chai.assert.equal(dialogInstance.dialog.title, options.title);
        chai.assert.equal(dialogInstance.dialog.id, dialogId);
        chai.assert.equal(dialogInstance.dialog.contentElement, options.contentElement);
        chai.assert.equal(dialogInstance.footerClicked, );
        chai.assert.equal(dialogInstance.buttons[0].id, "close");
    });
});
