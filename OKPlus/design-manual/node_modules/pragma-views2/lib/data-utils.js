import {DataSet} from "./dataset.js";

export async function createDataSetFromDatasource(datasource, dataset) {
    const items = Array.from(datasource.selectedItems);
    const item = items[0];
    
    if (dataset == null) {
        const fields = Object.keys(item);
        const def = await createDefinitionFromModel(item, fields);
        dataset = new DataSet(def, datasource.schema, null, datasource.schema.remoteUpdate);
        dataset.__defaults = await createDefaultsMap(item, fields);
        dataset.__primaryActions = datasource.definition.primaryActions;
        dataset.remote = datasource.definition.remote;
    }
    dataset.setInitialValues(item);
    
    return dataset;
}

async function createDefinitionFromModel(model, fields) {
    const result = {
        fields: []
    };
    
    for (let field of fields) {
        result.fields.push({
            name: field,
            default: model[field]
        })
    }
    return result;
}

async function createDefaultsMap(model, fields) {
    const result = new Map();
    for (let field of fields) {
        result.set(field, model[field]);
    }
    return result;
}