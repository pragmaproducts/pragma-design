const deviceTypes =
    [
        {
            device: "phone",
            orientation: "portrait",
            mediaQuery: "(min-width: 320px) and (max-width: 725px) and (orientation: portrait)"
        },
        {
            device: "phone",
            orientation: "landscape",
            mediaQuery: "(min-width: 320px) and (max-width: 812px) and (orientation: landscape)"
        },
        {
            device: "tablet",
            orientation: "portrait",
            mediaQuery: "(min-width: 726px) and (max-width: 1280px) and (orientation: portrait)"
        },
        {
            device: "tablet",
            orientation: "landscape",
            mediaQuery: "(min-width: 813px) and (max-width: 1280px) and (orientation: landscape)"
        },
        {
            device: "desktop",
            mediaQuery: "(min-width: 1200px)"
        }
    ];

export class ScreenObserver {
    constructor() {
        this.resizeHandler = this.resize.bind(this);
        window.addEventListener("resize", this.resizeHandler);

        this._setInitialValues();
    }

    dispose() {
        window.removeEventListener("resize", this.resizeHandler);
        this.resizeHandler = null;
    }

    resize() {
        clearTimeout(this.timeout);
        this.timeout = setTimeout(this.postMessage.bind(this), 500);
    }

    postMessage() {
        if (window.eventEmitter != null) {
            window.eventEmitter.emit("screen-resized");
        }
    }

    _setInitialValues() {
        for(const device of deviceTypes) {
           const media = window.matchMedia(device.mediaQuery);
           

            this._setScreenValues(media, device, false);
            // noinspection JSDeprecatedSymbols - This is not deprecated and fully supported by all browsers. See https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList
            media.addListener((e)=> {
                this._setScreenValues(e,device, true);
            })
        }
    }

    _setScreenValues(mediaQueryList, device, sendEvent) {
        if(mediaQueryList.matches === true) {
            if (window.eventEmitter != null && sendEvent === true) {
                window.eventEmitter.emit("screen-changed", device);
            }
            document.screen = device;
        }
    }
}
