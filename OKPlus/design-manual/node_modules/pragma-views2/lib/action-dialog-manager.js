export class ActionDialogManager {
    get id() {
        return this._id;
    }

    set id(newValue) {
        this._id = newValue;
    }

    constructor(options) {
        this.contentElement = options.contentElement;
        this.animatedCallback = options.animatedCallback;
        this.title = options.title || "";
        this.buttons = options.buttons || [];
        window.dialogManager.add(this);
    }

    async dispose() {
        await window.dialogManager.remove(this);
        delete this.animatedCallback;

        this.buttons = null;
        this.dialog = null;
        this.title = null;
        this._id = null;
    }

    create() {
        this.dialog = document.createElement("pragma-action-dialog");
        this.dialog.title = this.title;

        this.buttons.unshift({
            id: "close",
            title: window.translations.pragmaDialogs.buttons.cancel,
            callback: this.dispose.bind(this)
        });
        
        this.dialog.id = this.id;
        this.dialog.buttons = this.buttons;
        this.dialog.contentElement = this.contentElement;
        this.dialog.footerClicked = this._action.bind(this);
        this.dialog.closeClicked = this.dispose.bind(this);
        return this.dialog;
    }

    _action(event) {
        const button = this.buttons.find(x => x.id === event.target.id);
        if (button != null) {
            button.callback(this, event.target);
        }
    }

    animate(type, direction, isNewDialog = false) {
        return new Promise(resolve => {
            this.dialog.className = '';
            this.dialog.classList.add(`animate-${type}-${direction}`);
            this.dialog.addEventListener("animationend", () => {
                if (type === "out") {
                    this.dialog.classList.add("hidden");
                }
                
                this.dialog.classList.remove(`animate-${type}-${direction}`);
              
                if (this.animatedCallback != null) {
                    this.animatedCallback(type, direction, isNewDialog);
                }
                resolve();
            }, {once: true});
        });
    }
}