import {createFullPageLayer, disposeFullPageLayer} from "./dom-helper.js";

export class DialogManager {
    constructor() {
        this.instances = [];
    }

    dispose() {
        if(this.instances.length > 0) {
            for(const instance of this.instances) {
                instance.dispose();
            }
        }
        this.instances = null;
    }

    async add(actionDialogManager) {
        if (this.instances.length > 0) {
            const previousDialog = this.instances[this.instances.length - 1];
            await previousDialog.animate("out", "left");
        }

        if (this.layer == null) {
            this.layer = createFullPageLayer();
        }
        const length = this.instances.push(actionDialogManager);
        actionDialogManager.id = length -1;
        const dialog = actionDialogManager.create();
        this.layer.appendChild(dialog);
        await actionDialogManager.animate("in", "right", true);
    }

    async remove(actionDialogManager) {
        await actionDialogManager.animate("out", "right");
        this.layer.removeChild(actionDialogManager.dialog);
        this.instances.splice(this.instances.indexOf(actionDialogManager), 1);
        actionDialogManager.dispose();
        if (this.instances.length > 0) {
            const previousDialog = this.instances[this.instances.length - 1];
            previousDialog.animate("in", "left");
        } else {
            disposeFullPageLayer();
            this.layer = null;
        }
    }
}