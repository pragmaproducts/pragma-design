export const tabsheetHtml = `
<pragma-pager __attributes__ >
    <div class="pager-list" slot="buttons">__tabSheetButtons__</div>
     __tabSheetPages__
</pragma-pager>
`;

export const tabSheetButtonHtml = `
<pager-button class="tabsheet-button" aria-controls="__id__">__title__</pager-button>
`;

export const tabSheetPageHtml = `
<div id="__id__" class="tabsheet-page">__content__</div>
`;

export const groupHtml = `
<pragma-group title="__title__" __attributes__ __classes__ >
    <div slot="body">__content__</div>
    <div slot="actions">__actions__</div>
</pragma-group>`;

export const panelBarHtml = `
<pragma-panel-bar panel-title="__title__" __attributes__ __classes__ >
    <div slot="body">__content__</div>
    <div slot="actions">__actions__</div>
</pragma-panel-bar>`;

export const splitViewHtml = `
<pragma-split-view __attributes__ __classes__ id="__id__">
    <div slot="left">__left__</div>
    <div slot="right">__right__</div>
</pragma-split-view>`;

export const htmlTemplateHtml = `<template __attributes__ __classes__>__content__</template>`;

export const inputHtml = `
<pragma-label-composite id="__field__" label-for="__field___field" label="__title__" __description__ __lookup__ __model__ __peek__ >
    <input id="__field___field" value.bind="__field__" __classes__ __attributes__ aria-label="__title__" __behaviours__ />
</pragma-label-composite>
`;

export const dateTimeHtml = `
<pragma-label-composite id="__field__" label-for="__field___field" label="__title__" __description__ __lookup__ __model__ __peek__ >
    <pragma-date-time id="__field___field" datetime.bind="__field__" __classes__ __attributes__ aria-label="__title__" __behaviours__ />
</pragma-label-composite>
`;

export const dateHtml = `
<pragma-label-composite id="__field__" label-for="__field___field" label="__title__" __description__ __lookup__ __model__ __peek__ >
    <pragma-input-date id="__field___field" date.bind="__field__" __classes__ __attributes__ aria-label="__title__" __behaviours__ ></pragma-input-date>
</pragma-label-composite>
`;

export const readOnlyHtml = `
<pragma-label-composite id="__field__" label="__title__">
    <div __classes__ __attributes__ aria-label="__title__">__content__</div>
</pragma-label-composite>
`;

export const checkboxHtml = `
    <div class="checkbox-composite">
        <input id="__field__" type="checkbox" checked.bind="__field__" __classes__ __attributes__ aria-label="__title__"/>
        <label for="__field__">__title__</label>
    </div>
`;

export const textareaHtml = `
<pragma-label-composite id="__field__" label="__title__" label-for="__field___field" __description__>
    <textarea id="__field___field" value.bind="__field__" __classes__ __attributes__ aria-label="__title__" __behaviours__></textarea>
</pragma-label-composite>
`;

export const selectHtmlForDefinedOptions = `
<pragma-label-composite id="__field__" label="__title__" label-for="__field___field" required="__required__" __description__>
    <div class="pragma-select">
            <select id="__field___field" value.bind="__field__" __classes__ __attributes__>
            __content__
        </select>
    </div>
</pragma-label-composite>
`;

export const selectOption = `
<option value="__option-id__">__content__</option>
`;

export const selectRepeatOption = `
<template repeat="__datasource__">
    <option value="#id">#title</option>
</template>
`;

export const containerHtml = `
<div __classes__ __attribute__>__content__</div>
`;

export const buttonHtml = `
<button __classes__ __attributes__ click.delegate="__action__">__title__</button>
`;


export const actionButtonHtml = `
<pragma-action-button __classes__ __attributes__ click.delegate="__action__" title="__title__" __activityId__></pragma-action-button>
`

export const iconButtonHtml = `
<pragma-icon-button __classes__ __attributes__ icon-name="__icon__" aria-label="__label__" click.delegate="__action__"></pragma-icon-button>
`;

export const dynamicHtml = `
<__tagname__ __classes__ __attributes__>__content__</__tagname__>
`;

export const masterDetailHtml = `
<pragma-master-detail __classes__ __attributes__ >
    <div slot="master">__master__</div>
    <div slot="detail">__detail__</div>
</pragma-master-detail>
`;

export const listTemplate1 = `
<template>
    <div class="no-mouse">
        <div class="stretch">__field1__</div>
        <div>__field2__</div>
    </div>
    
    <div class="no-mouse">
        <span class="bold">__field3__</span>
        <span class="piped">__field4__</span>
    </div>
    
    <div class="suppressed no-mouse">__field5__</div>
</template>
`;

export const cardHtmlTemplate = `
    <div class="card">__content__</div>
`;

export const radioRepeatOptions = `
<label repeat.for="o of __datasource__">
    <input type="radio" name="__groupname__" model.bind="o.id" checked.bind="__field__">
    <span>__content__</span>
</label>
`;

export const radioGroup = '<div role="radiogroup" __classes__ __attributes__>__content__</div>';

export const radioOption = `
<label class="radio-item" role="radio">
    <input type="radio" name="__groupname__" model.bind="__option-id__" checked.bind="__field__">
    <span>__content__</span>
</label>
`;

export const listTemplate = `
<pragma-advanced-list 
    datasource.bind="__datasource__"
    selection="__selection__"
    expand-ref="__expandRef__"
    title-ref="__titleRef__"
    type-ref="__typeRef__"
    selected-id.bind="__selected-id__"
    id="__id__"
    __attributes__ 
    __classes__
    __perspective__
    data-visualization="true">
        __templates__
        __formatters__
</pragma-advanced-list>`;

export const treeTemplate = `
<pragma-advanced-tree 
    datasource.bind="__datasource__"
    selection="__selection__"
    expand-ref="__expandRef__"
    title-ref="__titleRef__"
    type-ref="__typeRef__"
    selected-id.bind="__selected-id__"
    id="__id__"
    __attributes__ 
    __classes__
    __perspective__
    data-visualization="true">
        __templates__
        __formatters__
</pragma-advanced-tree>`;

export const gridTemplate = `
<pragma-advanced-grid 
    datasource.bind="__datasource__"
    selection="__selection__"
    expand-ref="__expandRef__"
    type-ref="__typeRef__"
    selected-id.bind="__selected-id__"
    id="__id__"
    __attributes__
    __perspective__
    __classes__
    data-visualization="true">
    __columngroups__
    __columns__
    __formatters__
    __content__
    <pragma-column-move></pragma-column-move>
</pragma-advanced-grid>`;

export const gridColumnTemplate = `
<pragma-grid-column
    __field__
    title="__title__"
    data-width="__width__"
    __attributes__
    __classes__>
        __formatters__
        __content__
</pragma-grid-column>`;

export const formatterTemplate = `
<pragma-conditional-formatter
    condition="__condition__"
    style-property="__style-property__"
    value="__value__"
    __attributes__
     __classes__>
</pragma-conditional-formatter>`;

export const treeListTemplate = `
<pr-advanced-treelist
    datasource.bind="__datasource__"
    id="__id__"
    __attributes__
    __classes__>
        __columngroups__
        __columns__
        __formatters__
        __content__
</pr-advanced-treelist>
`;

export const visualizationTemplate = `
<visualization items.bind="__datasource__" perspective.bind="perspective(__perspective__)" view="__view__" __template__ __classes__ __attributes__ context.bind="context"></visualization>
`;

export const processTemplate = `
<div class="dialog" data-type="process">
    <div class="dialog-body">__html__</div>
    <div class="toolbar">
        <pragma-staged-progress aria-valuemin="0" aria-valuemax="100" aria-value="0">
            __stages__
        </pragma-staged-progress>
        
        <button click.delegate="closeDialog()">Cancel</button>
        <button click.delegate="nextProcessStep()">Next</button>
    </div>
</div>
</div>
`;

export const processStepTemplate = `
<pragma-staged-indicator aria-value="__value__" title="__title__"></pragma-staged-indicator>
`;

export const overflowToolbarTemplate = `
<pr-overflow-toolbar __action__ __count__>
    <template>__content__</template>
</pr-overflow-toolbar>
`;

export const svgSymbol = `
    <svg xmlns:xlink="http://www.w3.org/1999/xlink">
        <use xlink:href="#__name__"/>
    </svg>
`;

export const validationsMap = new Map([
    ["required", "validation(required)"],
    ["readonly", "validation(readonly)"],
    ["maxLength", "validation(maxlength=__value__)"],
    ["minLength", "validation(minlength=__value__)"],
    ["maxValue", "validation(max=__value__)"],
    ["minValue", "validation(min=__value__)"],
    ["pattern", "validation(pattern=__value__"]
])


export function populateTemplate(template, map) {
    let result = template;
    const keys = Object.keys(map);

    for (let key of keys) {
       const replacement = map[key];
        result = result.split(key).join(replacement);
    }

    return result;
}